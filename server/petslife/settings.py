"""
Django settings for petslife project.

Generated by 'django-admin startproject' using Django 3.0.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
from datetime import timedelta

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'n(lylkd%r)=8c+n*i12qv*o$vwojitybf4h041_r+e37kmv-0f'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']

LOGIN_URL = '/accounts/login/'

# Used for python manage.py collectstatic to allow all static files copied into STATIC_ROOT folder 
#STATIC_ROOT = os.path.join(BASE_DIR, "static")
STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static"),
]

STATIC_URL = '/static/'

# Server path to store files in the computer
MEDIA_ROOT = os.path.join(BASE_DIR, "media")
# Reference URL for browser to access the files over Http.
MEDIA_URL='/media/'

LOCALE_PATHS = [
    os.path.join(BASE_DIR, "locale"),
]

IMAGE_ROOT = os.path.join(BASE_DIR,"static/image")
# IMAGE_ROOT = os.path.join(BASE_DIR, "image")
WEB_URL = 'http://127.0.0.1:8000'
IMAGE_URL= WEB_URL+STATIC_URL+'image/'

# Application definition

INSTALLED_APPS = [
    'django_crontab',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'corsheaders',
    # DRF
    'rest_framework',
    # Apps related to project
    'member.apps.MemberConfig'
]

SOCIAL_GOOGLE_CLIENT_ID = '794470844652-8d5fnlumeq4dfl47hbslotuvhmbg2jgj.apps.googleusercontent.com'
SOCIAL_GOOGLE_SECKEY = 'zINEgFjpWShAqSZpk7kvdBqQ'

SOCIAL_AUTH_FACEBOOK_KEY = '1062783657460982'
SOCIAL_AUTH_FACEBOOK_SECRET = '8df5ab41eb37378f51d369a02e14a295'

# CORS header
CORS_ORIGIN_WHITELIST = [
    "http://localhost:8000",
    "http://localhost:8010",
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    #'django.middleware.locale.LocaleMiddleware',
    'django.middleware.common.CommonMiddleware',
    #'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'petslife.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # Custom template for admin
        'DIRS': [os.path.join(BASE_DIR, 'templates')], 
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                #'django.template.context_processors.i18n',
            ],
        },
    },
]

WSGI_APPLICATION = 'petslife.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    "default": 
    {
		"ENGINE": "django.db.backends.mysql",
  
        # for Azure VM 
        #"HOST": "localhost",
        #"NAME": 'petsLife',
        #"USER": "plaDBA",
        #"PASSWORD": "k#Wq62Cj&V^z@L",
        
        # for local database 
        "HOST": "127.0.0.1",
        "NAME": 'petsLife',
        "USER": "plaDBA",
        "PASSWORD": "k#Wq62Cj&V^z@L",
        #
        "PORT": "",
        'OPTIONS': {
            'charset': 'utf8mb4'  # This is the important line
        },
        #"auth_plugin":'mysql_native_password',
	}
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

SIMPLE_JWT = {
    'ACCESS_TOKEN_LIFETIME': timedelta(hours=12),
}

REST_FRAMEWORK = {
    # Use Django's standard `django.contrib.auth` permissions,
    # or allow read-only access for unauthenticated users.
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly'
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': (
        'rest_framework.authentication.BasicAuthentication',
        'rest_framework.authentication.SessionAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'
#LANGUAGE_CODE = 'zh-hant'

#TIME_ZONE = 'UTC'
TIME_ZONE = 'Asia/Taipei'

USE_I18N = True

USE_L10N = False

#USE_TZ = True
# Allow all
CORS_ORIGIN_ALLOW_ALL = True

# 瀏覽器關閉後，session 立即失效
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

DATE_FORMAT = '%Y/%m/%d'
DATE_FORMAT1 = '%Y-%m-%d'
DATETIME_FORMAT = '%Y-%m-%d %H:%M:%S'

# 小數點兩位，有千分號
#AMOUNT_FORMAT = "#,##0.00"
# 無小數點，有千分號
#GOLD_FORMAT = "#,##0"

# LOGGING = {
#     'version': 1,
#     'disable_existing_loggers': False,
#     'handlers': {
#         'console': {
#             'class': 'logging.StreamHandler',
#         },
#     },
#     'loggers': {
#         'django.db.backends': {
#             'handlers': ['console'],
#             'level': 'DEBUG' if DEBUG else 'INFO',
#         },
#     },
# }
CRONJOBS = [
    ('*/5 * * * *', 'member.cron.getDynaMsg_job','>> scheduled_job.log')
]